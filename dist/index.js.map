{"version":3,"file":"index.js","sources":["../src/GridHelper/index.tsx","../src/Grid/Grid.constants.ts","../src/Grid/GridSystem.tsx","../src/Grid/Grid.hooks.ts","../src/Grid/Grid.tsx","../src/Grid/GridColumn.tsx"],"sourcesContent":["import React, {CSSProperties, FunctionComponent, useContext, useEffect, useState} from 'react'\nimport {Column, Grid, GridSystemContext, useBreakpoint} from '..';\n\nimport styles from './GridHelper.module.css';\n\n\ninterface GridHelperProps {\n    margin?: {\n        [index: string]: string;\n    }\n}\n\n\nexport const GridHelper: FunctionComponent<GridHelperProps> =\n    ({\n         margin\n     }): JSX.Element => {\n\n        const savedVisibility = (localStorage.getItem('grid-helper') === 'true');\n        const {breakpoints, gridHelperColumnColor} = useContext(GridSystemContext)\n        const currentBreakpoint = useBreakpoint()\n        const [visible, setVisible] = useState<boolean>(savedVisibility ? savedVisibility : false);\n\n        const columnStyle: CSSProperties = {\n            backgroundColor: 'rgba(0, 0, 0, .1)'\n        };\n\n        if (gridHelperColumnColor) {\n            columnStyle.backgroundColor = gridHelperColumnColor;\n        }\n\n        useEffect(() => {\n            const toggleGrid = ({key, ctrlKey}: KeyboardEvent): void => {\n                if (ctrlKey && key === 'g') {\n                    const isVisible = !visible;\n                    setVisible(isVisible);\n                    localStorage.setItem('grid-helper', isVisible.toString());\n                }\n            };\n\n            window.addEventListener('keyup', toggleGrid);\n\n            return (): void => window.removeEventListener('keyup', toggleGrid);\n        }, [visible]);\n\n        return (\n            <div className={`${styles.wrapper} ${visible ? styles.wrapper__visible : ''}`}>\n                {Object.keys(breakpoints).map((breakpoint, index) => (\n                    <div\n                        className={styles.container}\n                        style={{\n                            display: currentBreakpoint !== breakpoint ? 'none' : '',\n                            margin: margin && margin[breakpoint] ? `0 ${margin[breakpoint]}` : 'auto'\n                        }} key={`g-${breakpoint}-${index}`}>\n                        <Grid className={styles.container}>\n                            {\n                                [...Array(breakpoints[breakpoint].columns)].fill('c').map((column, index) =>\n                                    <Column key={`${breakpoint}-${column}-${index}`} className={styles.column}\n                                            size={{[breakpoint]: 1}}>\n                                        <div style={columnStyle} className={styles.columnFill}/>\n                                    </Column>)\n                            }\n                        </Grid>\n                    </div>\n                ))}\n            </div>\n        )\n    }\n","import {Breakpoint, GridSettings} from \"./Grid.interfaces\";\n\nexport const GRID_SETTINGS: GridSettings = {\n    breakpoints: {\n        sm: {\n            columns: 4,\n            gutterSize: 5,\n            maxWidth: 600,\n        },\n        md: {\n            columns: 8,\n            gutterSize: 5,\n            minWidth: 600,\n            maxWidth: 900,\n        },\n        lg: {\n            columns: 12,\n            gutterSize: 10,\n            minWidth: 900,\n        }\n    },\n    prefixes: {\n        grid: 'g',\n        gridColumn: 'gc',\n    }\n}\n\nconst getBreakpointQuery = (\n    {minWidth, maxWidth}: Breakpoint,\n    styles: string\n) => {\n    const query = [];\n\n    if (minWidth) {\n        query.push(`(min-width: ${minWidth}px)`);\n    }\n    if (maxWidth) {\n        query.push(`(max-width: ${maxWidth}px)`);\n    }\n\n    return `@media ${query.join(' and ')} {${styles}}`\n};\n\nexport const createStyles = (gridSettings: GridSettings) => {\n    const style = document.createElement('style');\n    const mediaQuery: string[] = [];\n    const {breakpoints, prefixes} = gridSettings;\n\n    const gridStyle = `.${prefixes.grid} {\n        display: flex;\n        flex-basis: auto;\n        flex-direction: row;\n        flex-wrap: wrap;\n        width: auto;\n    }`;\n\n    Object.keys(breakpoints).forEach((breakpoint) => {\n        let items = '';\n        const {gutterSize} = breakpoints[breakpoint];\n\n        // CSS Grid\n        items += `.${prefixes.grid}-${breakpoint} {\n                margin-left: -${gutterSize}px;\n                margin-right: -${gutterSize}px;\n            }`;\n\n        // CSS column\n        items += `.${prefixes.gridColumn}-${breakpoint} {\n                box-sizing: border-box;\n                padding-left: ${gutterSize}px;\n                padding-right: ${gutterSize}px;\n            }`;\n\n        for (let i = 1; i <= breakpoints[breakpoint].columns; i++) {\n            for (let j = 1; j <= i; j++) {\n                const width = (j / i) * 100;\n\n                items += `.${prefixes.gridColumn}-${breakpoint}-${j}-${i} {\n                        flex-basis: ${width}%;\n                        width: ${width}%;\n                    }`;\n\n                // CSS offset left\n                items += `.${prefixes.gridColumn}-ol-${breakpoint}-${j}-${i} {\n                        margin-left: ${width}%;\n                    }`;\n\n                // CSS offset left\n                items += `.${prefixes.gridColumn}-or-${breakpoint}-${j}-${i} {\n                        margin-right: ${width}%;\n                    }`;\n            }\n        }\n\n        mediaQuery.push(getBreakpointQuery(breakpoints[breakpoint], items))\n    });\n\n    mediaQuery.push(gridStyle);\n\n    document.head.appendChild(style);\n    style.appendChild(document.createTextNode(mediaQuery.join('')));\n};\n","import React, {createContext, FunctionComponent, useEffect} from 'react'\nimport {GridSettings, GridSystemProps} from './Grid.interfaces'\nimport {GridHelper} from \"../GridHelper\";\nimport {createStyles, GRID_SETTINGS} from \"./Grid.constants\";\n\n\nexport const GridSystemContext = createContext<GridSettings>(GRID_SETTINGS);\n\nexport const GridSystem: FunctionComponent<GridSystemProps> =\n    ({\n         settings = GRID_SETTINGS,\n         useGridHelper = false,\n         children\n     }) => {\n        useEffect(() => createStyles(settings), [settings]);\n\n        return (\n            <GridSystemContext.Provider value={settings}>\n                {children}\n                {useGridHelper && <GridHelper margin={settings?.gridHelperMargins}/>}\n            </GridSystemContext.Provider>\n        );\n    }\n","import {useContext, useEffect, useState} from \"react\";\nimport {GridSystemContext} from \"./GridSystem\";\n\nexport const useBreakpoint = () => {\n    const gridContext = useContext(GridSystemContext);\n    const [breakpoint, setBreakpoint] = useState<string>(\n        Object.keys(gridContext.breakpoints)[0]\n    );\n\n    const resvolveBreakpoint = () => {\n        const bp = Object.keys(gridContext.breakpoints).find((key) => {\n            const {minWidth, maxWidth} = gridContext.breakpoints[key];\n            const {innerWidth} = window;\n\n            let breakpoint = null;\n\n            if (\n                minWidth &&\n                maxWidth &&\n                innerWidth >= minWidth &&\n                innerWidth <= maxWidth\n            ) {\n                breakpoint = key;\n            } else if (minWidth && !maxWidth && innerWidth >= minWidth) {\n                breakpoint = key;\n            } else if (!minWidth && maxWidth && innerWidth < maxWidth) {\n                breakpoint = key;\n            }\n\n            return breakpoint;\n        });\n\n        if (bp) {\n            setBreakpoint(bp);\n        }\n    }\n\n    useEffect(() => {\n        let tm: number;\n        const handleResize = () => {\n            tm = window.setTimeout(() => resvolveBreakpoint(), 10);\n        };\n\n        window.addEventListener(\"resize\", handleResize);\n\n        handleResize();\n\n        return () => {\n            window.clearTimeout(tm);\n            window.removeEventListener(\"resize\", handleResize);\n        }\n    }, [gridContext.breakpoints]);\n\n    return breakpoint;\n};\n","import React, { useContext } from 'react'\nimport { GridSystemContext } from './GridSystem'\n\ninterface GridContainerProps {\n  className?: string;\n  style?: {};\n}\n\nexport const Grid: React.FC<GridContainerProps> = ({\n  children,\n  className = '',\n  style\n}) => {\n  const { breakpoints, prefixes } = useContext(GridSystemContext)\n  const classNames = Object.keys(breakpoints)\n    .map((breakpoint) => `g-${breakpoint}`)\n    .join(' ')\n\n  return (\n    <div\n      style={style}\n      className={`${prefixes.grid} ${classNames} ${className}`}\n    >\n      {children}\n    </div>\n  )\n}\n","import React, {Fragment, FunctionComponent, useContext, useEffect, useRef, useState} from 'react';\nimport {GridSystemContext} from './GridSystem';\n\n\ninterface GridColumnProps {\n  className?: string;\n  size: {\n    [index: string]: number | undefined;\n  },\n  offsetLeft?: {\n    [index: string]: number | undefined;\n  },\n  offsetRight?: {\n    [index: string]: number | undefined;\n  }\n}\n\ninterface ColumnState {\n  classNames: string;\n  dataProps: { [index: string]: string | number; }\n}\n\nconst defaultState = {classNames: '', dataProps: {}};\n\nexport const Column: FunctionComponent<GridColumnProps> =\n  ({\n     children,\n     className = '',\n     size,\n     offsetLeft,\n     offsetRight\n   }) => {\n    const refColumn = useRef<HTMLDivElement>(null);\n    const {breakpoints, prefixes} = useContext(GridSystemContext);\n    const [state, setState] = useState<ColumnState>(defaultState);\n    const [data, setData] = useState({});\n\n    const getParentSizes = () => {\n      const classNames: string[] = [];\n      let dataProps: { [index: string]: string | number } = {};\n\n      Object.keys(breakpoints).forEach(breakpoint => {\n        const parentSize = refColumn?.current?.parentElement\n          ?.closest(`[data-column-size-${breakpoint}]`)\n          ?.getAttribute(`data-column-size-${breakpoint}`);\n\n        const totalColumns = parentSize ? parentSize : breakpoints[breakpoint].columns;\n        const columnSize = size[breakpoint] ? size[breakpoint] : totalColumns;\n\n        classNames.push(`${prefixes.gridColumn}-${breakpoint} ${prefixes.gridColumn}-${breakpoint}-${columnSize}-${totalColumns}`);\n\n        if (offsetLeft && offsetLeft[breakpoint]) {\n          classNames.push(`${prefixes.gridColumn}-ol-${breakpoint}-${offsetLeft[breakpoint]}-${totalColumns}`);\n        }\n\n        if (offsetRight && offsetRight[breakpoint]) {\n          classNames.push(`${prefixes.gridColumn}-or-${breakpoint}-${offsetRight[breakpoint]}-${totalColumns}`);\n        }\n\n        if (columnSize) {\n          dataProps[`data-column-size-${breakpoint}`] = columnSize;\n        }\n      });\n\n      setState({\n        classNames: classNames.join(' '),\n        dataProps,\n      });\n\n      setData(dataProps);\n    }\n\n    useEffect(() => {\n      if (refColumn.current && size) {\n        getParentSizes();\n      }\n    }, [size, offsetLeft, offsetRight, refColumn, breakpoints]);\n\n    return <div\n      ref={refColumn}\n      {...data}\n      className={`${state.classNames} ${className}`}>\n      {Object.keys(state.dataProps).length > 0 ? children : <Fragment />}\n    </div>;\n  };\n"],"names":["GridHelper","margin","savedVisibility","localStorage","getItem","useContext","GridSystemContext","breakpoints","gridHelperColumnColor","currentBreakpoint","useBreakpoint","useState","visible","setVisible","columnStyle","backgroundColor","useEffect","toggleGrid","key","ctrlKey","isVisible","setItem","toString","window","addEventListener","removeEventListener","React","className","styles","wrapper","wrapper__visible","Object","keys","map","breakpoint","index","container","style","display","Grid","Array","columns","fill","column","Column","size","columnFill","GRID_SETTINGS","sm","gutterSize","maxWidth","md","minWidth","lg","prefixes","grid","gridColumn","getBreakpointQuery","query","push","join","createStyles","gridSettings","document","createElement","mediaQuery","gridStyle","forEach","items","i","j","width","head","appendChild","createTextNode","createContext","GridSystem","settings","useGridHelper","children","Provider","value","gridHelperMargins","gridContext","setBreakpoint","resvolveBreakpoint","bp","find","innerWidth","tm","handleResize","setTimeout","clearTimeout","classNames","defaultState","dataProps","offsetLeft","offsetRight","refColumn","useRef","state","setState","data","setData","getParentSizes","parentSize","current","parentElement","closest","getAttribute","totalColumns","columnSize","ref","length","Fragment"],"mappings":"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"}