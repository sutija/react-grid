{"version":3,"file":"index.js","sources":["../src/GridHelper/index.tsx","../src/Grid/GridSystem.tsx","../src/Grid/Grid.hooks.ts","../src/Grid/Grid.tsx","../src/Grid/GridColumn.tsx"],"sourcesContent":["import React, {FunctionComponent, useContext} from 'react'\nimport {Column, GetBreakpoint, Grid, GridSystemContext} from '..';\n\nimport styles from './GridHelper.module.css';\n\n\ninterface GridHelperProps {\n  margin?: {\n    [index: string]: string;\n  }\n}\n\nexport const GridHelper: FunctionComponent<GridHelperProps> = ({\n  margin\n}): JSX.Element => {\n  const {breakpoints} = useContext(GridSystemContext)\n  const currentBreakpoint = GetBreakpoint()\n\n  return (\n    <div className={styles.wrapper}>\n      {Object.keys(breakpoints).map((breakpoint, index) => (\n        <div \n        className={styles.container}\n        style={{\n          display: currentBreakpoint !== breakpoint ? 'none' : '',\n          margin: margin && margin[breakpoint] ? `0 ${margin[breakpoint]}` : 'auto'}} key={`g-${breakpoint}-${index}`}>\n        <Grid className={styles.container}>\n          {\n            [...Array(breakpoints[breakpoint].columns)].fill('c').map((column, index) => \n            <Column key={`${breakpoint}-${column}-${index}`} className={styles.column} size={{[breakpoint]: 1}} />)\n          }\n        </Grid>\n        </div>\n      ))}\n    </div>\n  )\n}\n","import React, { createContext, FunctionComponent, useEffect } from 'react'\nimport { Breakpoint, GridSystemProps } from './Grid.interfaces'\n\nconst getBreakpointQuery = (\n  { minWidth, maxWidth }: Breakpoint,\n  styles: string\n) => {\n  const query = []\n  if (minWidth) {\n    query.push(`(min-width: ${minWidth}px)`)\n  }\n  if (maxWidth) {\n    query.push(`(max-width: ${maxWidth}px)`)\n  }\n\n  return `@media ${query.join(' and ')} {${styles}}`\n}\n\nconst createStyles = (gridSettings: GridSystemProps) => {\n  const style = document.createElement('style')\n  const mediaQuery: string[] = []\n  const { breakpoints, prefixes } = gridSettings\n\n  const gridStyle = `.${prefixes.grid} {\n        display: flex;\n        flex-basis: auto;\n        flex-direction: row;\n        flex-wrap: wrap;\n        width: auto;\n    }`\n\n  Object.keys(breakpoints).forEach((breakpoint) => {\n    let items = ''\n    const { gutterSize } = breakpoints[breakpoint]\n\n    // CSS Grid\n    items += `.${prefixes.grid}-${breakpoint} {\n                margin-left: -${gutterSize}px;\n                margin-right: -${gutterSize}px;\n            } `\n\n    // CSS column\n    items += `.${prefixes.gridColumn}-${breakpoint} {\n                box-sizing: border-box;\n                padding-left: ${gutterSize}px;\n                padding-right: ${gutterSize}px;\n            } `\n\n    for (let i = 1; i <= breakpoints[breakpoint].columns; i++) {\n      for (let j = 1; j <= i; j++) {\n        const width = (j / i) * 100\n        items += `.${prefixes.gridColumn}-${breakpoint}-${j}-${i} {\n                        flex-basis: ${width}%;\n                        width: ${width}%;\n                    }`\n\n        // CSS offset left\n        items += `.${prefixes.gridColumn}-ol-${breakpoint} {\n                        margin-left: ${width}%;\n                    }`\n\n        // CSS offset left\n        items += `.${prefixes.gridColumn}-or-${breakpoint} {\n                        margin-right: ${width}%;\n                    }`\n      }\n    }\n\n    mediaQuery.push(getBreakpointQuery(breakpoints[breakpoint], items))\n  })\n\n  mediaQuery.push(gridStyle)\n\n  document.head.appendChild(style)\n  style.appendChild(document.createTextNode(mediaQuery.join('')))\n}\n\nexport const GridSystemContext = createContext<GridSystemProps>({\n  breakpoints: {},\n  prefixes: {\n    grid: 'g',\n    gridColumn: 'gc'\n  }\n})\n\nexport const GridSystem: FunctionComponent<{ settings: GridSystemProps }> = ({\n  settings,\n  children\n}) => {\n  useEffect(() => createStyles(settings), [settings])\n  return (\n    <GridSystemContext.Provider value={settings}>\n      {children}\n    </GridSystemContext.Provider>\n  )\n}\n","import {useContext, useEffect, useState} from \"react\";\nimport {GridSystemContext} from \"./GridSystem\";\n\nexport const GetBreakpoint = () => {\n  const gridContext = useContext(GridSystemContext);\n  const [breakpoint, setBreakpoint] = useState<string>(\n    Object.keys(gridContext.breakpoints)[0]\n  );\n\n  useEffect(() => {\n    const handleResize = () => {\n      setTimeout(() => {\n        const bp = Object.keys(gridContext.breakpoints).find((key) => {\n          const { minWidth, maxWidth } = gridContext.breakpoints[key];\n          const { innerWidth } = window;\n\n          let breakpoint = null;\n\n          if (\n            minWidth &&\n            maxWidth &&\n            innerWidth >= minWidth &&\n            innerWidth <= maxWidth\n          ) {\n            breakpoint = key;\n          } else if (minWidth && !maxWidth && innerWidth >= minWidth) {\n            breakpoint = key;\n          } else if (!minWidth && maxWidth && innerWidth < maxWidth) {\n            breakpoint = key;\n          }\n\n          return breakpoint;\n        });\n\n        if (bp) {\n          setBreakpoint(bp);\n        }\n      }, 10);\n    };\n\n    window.addEventListener(\"resize\", handleResize);\n\n    handleResize();\n\n    return () => window.addEventListener(\"resize\", handleResize);\n  }, [gridContext.breakpoints]);\n\n  return breakpoint;\n};\n","import React, { useContext } from 'react'\nimport { GridSystemContext } from './GridSystem'\n\ninterface GridContainerProps {\n  className?: string;\n  style?: {};\n}\n\nexport const Grid: React.FC<GridContainerProps> = ({\n  children,\n  className = '',\n  style\n}) => {\n  const { breakpoints, prefixes } = useContext(GridSystemContext)\n  const classNames = Object.keys(breakpoints)\n    .map((breakpoint) => `g-${breakpoint}`)\n    .join(' ')\n\n  return (\n    <div\n      style={style}\n      className={`${prefixes.grid} ${classNames} ${className}`}\n    >\n      {children}\n    </div>\n  )\n}\n","import React, {FunctionComponent, useContext, useEffect, useRef, useState} from 'react';\nimport {GridSystemContext} from './GridSystem';\n\n\ninterface GridColumnProps {\n  className?: string;\n  size: {\n    [index: string]: number | undefined;\n  },\n  offsetLeft?: {\n    [index: string]: number | undefined;\n  },\n  offsetRight?: {\n    [index: string]: number | undefined;\n  }\n}\n\ninterface ColumnState {\n  classNames: string;\n  dataProps: { [index: string]: string | number; }\n}\n\nconst defaultState = {classNames: '', dataProps: {}};\n\nexport const Column: FunctionComponent<GridColumnProps> =\n  ({\n     children,\n     className = '',\n     size,\n     offsetLeft,\n     offsetRight\n   }) => {\n    const refColumn = useRef<HTMLDivElement>(null);\n    const {breakpoints, prefixes} = useContext(GridSystemContext);\n    const [state, setState] = useState<ColumnState>(defaultState)\n\n    const getParentSizes = () => {\n      const classNames: string[] = [];\n      let dataProps: { [index: string]: string | number } = {};\n\n      Object.keys(breakpoints).forEach(breakpoint => {\n        const parentSize = refColumn?.current?.parentElement\n          ?.closest(`[data-column-size-${breakpoint}]`)\n          ?.getAttribute(`data-column-size-${breakpoint}`);\n\n        const totalColumns = parentSize ? parentSize : breakpoints[breakpoint].columns;\n        const columnSize = size[breakpoint] ? size[breakpoint] : totalColumns;\n\n        classNames.push(`${prefixes.gridColumn}-${breakpoint} ${prefixes.gridColumn}-${breakpoint}-${columnSize}-${totalColumns}`);\n\n        if (offsetLeft && offsetLeft[breakpoint]) {\n          classNames.push(`${prefixes.gridColumn}-ol-${breakpoint}-${offsetLeft[breakpoint]}-${totalColumns}`);\n        }\n\n        if (offsetRight && offsetRight[breakpoint]) {\n          classNames.push(`${prefixes.gridColumn}-or-${breakpoint}-${offsetRight[breakpoint]}-${totalColumns}`);\n        }\n\n        if (columnSize) {\n          dataProps[`data-column-size-${breakpoint}`] = columnSize;\n        }\n      });\n\n      setState({\n        classNames: classNames.join(' '),\n        dataProps,\n      });\n    }\n\n    useEffect(() => getParentSizes(), [size, offsetLeft, offsetRight]);\n\n    return <div\n      ref={refColumn}\n      {...state.dataProps}\n      className={`${state.classNames} ${className}`}>\n      {children}\n    </div>;\n  };\n"],"names":["GridHelper","margin","useContext","GridSystemContext","breakpoints","currentBreakpoint","GetBreakpoint","React","className","styles","wrapper","Object","keys","map","breakpoint","index","container","style","display","key","Grid","Array","columns","fill","column","Column","size","getBreakpointQuery","minWidth","maxWidth","query","push","join","createStyles","gridSettings","document","createElement","mediaQuery","prefixes","gridStyle","grid","forEach","items","gutterSize","gridColumn","i","j","width","head","appendChild","createTextNode","createContext","GridSystem","settings","children","useEffect","Provider","value","gridContext","useState","setBreakpoint","handleResize","setTimeout","bp","find","window","innerWidth","addEventListener","classNames","defaultState","dataProps","offsetLeft","offsetRight","refColumn","useRef","state","setState","getParentSizes","parentSize","current","parentElement","closest","getAttribute","totalColumns","columnSize","ref"],"mappings":"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"}