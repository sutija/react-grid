{"version":3,"file":"index.modern.js","sources":["../src/GridHelper/index.tsx","../src/Grid/GridSystem.tsx","../src/Grid/Grid.hooks.ts","../src/Grid/Grid.tsx","../src/Grid/GridColumn.tsx"],"sourcesContent":["import React, {FunctionComponent, useContext, useEffect, useState} from 'react'\nimport {Column, GetBreakpoint, Grid, GridSystemContext} from '..';\n\nimport styles from './GridHelper.module.css';\n\n\ninterface GridHelperProps {\n  margin?: {\n    [index: string]: string;\n  }\n}\n\n\nexport const GridHelper: FunctionComponent<GridHelperProps> = ({\n  margin\n}): JSX.Element => {\n  \n  const {breakpoints} = useContext(GridSystemContext)\n  const currentBreakpoint = GetBreakpoint()\n  const [visible, setVisible] = useState(false);\n\n  useEffect(() => {\n    const toggleGrid = ({ key, ctrlKey }: KeyboardEvent): void => {\n      if (ctrlKey && key === 'g') {\n        setVisible(!visible);\n      }\n    };\n\n    window.addEventListener('keyup', toggleGrid);\n\n    return (): void => {\n      window.removeEventListener('keyup', toggleGrid);\n    };\n  }, [visible]);\n\n  return (\n    <div className={`${styles.wrapper} ${visible ? styles.wrapper__visible : ''}`}>\n      {Object.keys(breakpoints).map((breakpoint, index) => (\n        <div \n        className={styles.container}\n        style={{\n          display: currentBreakpoint !== breakpoint ? 'none' : '',\n          margin: margin && margin[breakpoint] ? `0 ${margin[breakpoint]}` : 'auto'}} key={`g-${breakpoint}-${index}`}>\n        <Grid className={styles.container}>\n          {\n            [...Array(breakpoints[breakpoint].columns)].fill('c').map((column, index) => \n            <Column key={`${breakpoint}-${column}-${index}`} className={styles.column} size={{[breakpoint]: 1}} />)\n          }\n        </Grid>\n        </div>\n      ))}\n    </div>\n  )\n}\n","import React, { createContext, FunctionComponent, useEffect } from 'react'\nimport { Breakpoint, GridSystemProps } from './Grid.interfaces'\n\nconst getBreakpointQuery = (\n  { minWidth, maxWidth }: Breakpoint,\n  styles: string\n) => {\n  const query = []\n  if (minWidth) {\n    query.push(`(min-width: ${minWidth}px)`)\n  }\n  if (maxWidth) {\n    query.push(`(max-width: ${maxWidth}px)`)\n  }\n\n  return `@media ${query.join(' and ')} {${styles}}`\n}\n\nconst createStyles = (gridSettings: GridSystemProps) => {\n  const style = document.createElement('style')\n  const mediaQuery: string[] = []\n  const { breakpoints, prefixes } = gridSettings\n\n  const gridStyle = `.${prefixes.grid} {\n        display: flex;\n        flex-basis: auto;\n        flex-direction: row;\n        flex-wrap: wrap;\n        width: auto;\n    }`\n\n  Object.keys(breakpoints).forEach((breakpoint) => {\n    let items = ''\n    const { gutterSize } = breakpoints[breakpoint]\n\n    // CSS Grid\n    items += `.${prefixes.grid}-${breakpoint} {\n                margin-left: -${gutterSize}px;\n                margin-right: -${gutterSize}px;\n            } `\n\n    // CSS column\n    items += `.${prefixes.gridColumn}-${breakpoint} {\n                box-sizing: border-box;\n                padding-left: ${gutterSize}px;\n                padding-right: ${gutterSize}px;\n            } `\n\n    for (let i = 1; i <= breakpoints[breakpoint].columns; i++) {\n      for (let j = 1; j <= i; j++) {\n        const width = (j / i) * 100\n        items += `.${prefixes.gridColumn}-${breakpoint}-${j}-${i} {\n                        flex-basis: ${width}%;\n                        width: ${width}%;\n                    }`\n\n        // CSS offset left\n        items += `.${prefixes.gridColumn}-ol-${breakpoint}-${j}-${i} {\n                        margin-left: ${width}%;\n                    }`\n\n        // CSS offset left\n        items += `.${prefixes.gridColumn}-or-${breakpoint}-${j}-${i} {\n                        margin-right: ${width}%;\n                    }`\n      }\n    }\n\n    mediaQuery.push(getBreakpointQuery(breakpoints[breakpoint], items))\n  })\n\n  mediaQuery.push(gridStyle)\n\n  document.head.appendChild(style)\n  style.appendChild(document.createTextNode(mediaQuery.join('')))\n}\n\nexport const GridSystemContext = createContext<GridSystemProps>({\n  breakpoints: {},\n  prefixes: {\n    grid: 'g',\n    gridColumn: 'gc'\n  }\n})\n\nexport const GridSystem: FunctionComponent<{ settings: GridSystemProps }> = ({\n  settings,\n  children\n}) => {\n  useEffect(() => createStyles(settings), [settings])\n  return (\n    <GridSystemContext.Provider value={settings}>\n      {children}\n    </GridSystemContext.Provider>\n  )\n}\n","import {useContext, useEffect, useState} from \"react\";\nimport {GridSystemContext} from \"./GridSystem\";\n\nexport const GetBreakpoint = () => {\n  const gridContext = useContext(GridSystemContext);\n  const [breakpoint, setBreakpoint] = useState<string>(\n    Object.keys(gridContext.breakpoints)[0]\n  );\n\n  useEffect(() => {\n    const handleResize = () => {\n      setTimeout(() => {\n        const bp = Object.keys(gridContext.breakpoints).find((key) => {\n          const { minWidth, maxWidth } = gridContext.breakpoints[key];\n          const { innerWidth } = window;\n\n          let breakpoint = null;\n\n          if (\n            minWidth &&\n            maxWidth &&\n            innerWidth >= minWidth &&\n            innerWidth <= maxWidth\n          ) {\n            breakpoint = key;\n          } else if (minWidth && !maxWidth && innerWidth >= minWidth) {\n            breakpoint = key;\n          } else if (!minWidth && maxWidth && innerWidth < maxWidth) {\n            breakpoint = key;\n          }\n\n          return breakpoint;\n        });\n\n        if (bp) {\n          setBreakpoint(bp);\n        }\n      }, 10);\n    };\n\n    window.addEventListener(\"resize\", handleResize);\n\n    handleResize();\n\n    return () => window.addEventListener(\"resize\", handleResize);\n  }, [gridContext.breakpoints]);\n\n  return breakpoint;\n};\n","import React, { useContext } from 'react'\nimport { GridSystemContext } from './GridSystem'\n\ninterface GridContainerProps {\n  className?: string;\n  style?: {};\n}\n\nexport const Grid: React.FC<GridContainerProps> = ({\n  children,\n  className = '',\n  style\n}) => {\n  const { breakpoints, prefixes } = useContext(GridSystemContext)\n  const classNames = Object.keys(breakpoints)\n    .map((breakpoint) => `g-${breakpoint}`)\n    .join(' ')\n\n  return (\n    <div\n      style={style}\n      className={`${prefixes.grid} ${classNames} ${className}`}\n    >\n      {children}\n    </div>\n  )\n}\n","import React, {FunctionComponent, useContext, useEffect, useRef, useState} from 'react';\nimport {GridSystemContext} from './GridSystem';\n\n\ninterface GridColumnProps {\n  className?: string;\n  size: {\n    [index: string]: number | undefined;\n  },\n  offsetLeft?: {\n    [index: string]: number | undefined;\n  },\n  offsetRight?: {\n    [index: string]: number | undefined;\n  }\n}\n\ninterface ColumnState {\n  classNames: string;\n  dataProps: { [index: string]: string | number; }\n}\n\nconst defaultState = {classNames: '', dataProps: {}};\n\nexport const Column: FunctionComponent<GridColumnProps> =\n  ({\n     children,\n     className = '',\n     size,\n     offsetLeft,\n     offsetRight\n   }) => {\n    const refColumn = useRef<HTMLDivElement>(null);\n    const {breakpoints, prefixes} = useContext(GridSystemContext);\n    const [state, setState] = useState<ColumnState>(defaultState)\n\n    const getParentSizes = () => {\n      const classNames: string[] = [];\n      let dataProps: { [index: string]: string | number } = {};\n\n      Object.keys(breakpoints).forEach(breakpoint => {\n        const parentSize = refColumn?.current?.parentElement\n          ?.closest(`[data-column-size-${breakpoint}]`)\n          ?.getAttribute(`data-column-size-${breakpoint}`);\n\n        const totalColumns = parentSize ? parentSize : breakpoints[breakpoint].columns;\n        const columnSize = size[breakpoint] ? size[breakpoint] : totalColumns;\n\n        classNames.push(`${prefixes.gridColumn}-${breakpoint} ${prefixes.gridColumn}-${breakpoint}-${columnSize}-${totalColumns}`);\n\n        if (offsetLeft && offsetLeft[breakpoint]) {\n          classNames.push(`${prefixes.gridColumn}-ol-${breakpoint}-${offsetLeft[breakpoint]}-${totalColumns}`);\n        }\n\n        if (offsetRight && offsetRight[breakpoint]) {\n          classNames.push(`${prefixes.gridColumn}-or-${breakpoint}-${offsetRight[breakpoint]}-${totalColumns}`);\n        }\n\n        if (columnSize) {\n          dataProps[`data-column-size-${breakpoint}`] = columnSize;\n        }\n      });\n\n      setState({\n        classNames: classNames.join(' '),\n        dataProps,\n      });\n    }\n\n    useEffect(() => getParentSizes(), [size, offsetLeft, offsetRight]);\n\n    return <div\n      ref={refColumn}\n      {...state.dataProps}\n      className={`${state.classNames} ${className}`}>\n      {children}\n    </div>;\n  };\n"],"names":["GridHelper","margin","breakpoints","useContext","GridSystemContext","currentBreakpoint","GetBreakpoint","visible","setVisible","useState","useEffect","toggleGrid","key","ctrlKey","window","addEventListener","removeEventListener","React","className","styles","wrapper","wrapper__visible","Object","keys","map","breakpoint","index","container","style","display","Grid","Array","columns","fill","column","Column","size","getBreakpointQuery","minWidth","maxWidth","query","push","join","createStyles","gridSettings","document","createElement","mediaQuery","prefixes","gridStyle","grid","forEach","items","gutterSize","gridColumn","i","j","width","head","appendChild","createTextNode","createContext","GridSystem","settings","children","Provider","value","gridContext","setBreakpoint","handleResize","setTimeout","bp","find","innerWidth","classNames","defaultState","dataProps","offsetLeft","offsetRight","refColumn","useRef","state","setState","getParentSizes","parentSize","current","parentElement","closest","getAttribute","totalColumns","columnSize","ref"],"mappings":"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"}