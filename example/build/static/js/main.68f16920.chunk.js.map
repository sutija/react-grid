{"version":3,"sources":["../../src/GridHelper/index.tsx","../../src/Grid/Grid.constants.ts","../../src/Grid/GridSystem.tsx","../../src/Grid/Grid.hooks.ts","../../src/Grid/Grid.tsx","../../src/Grid/GridColumn.tsx","App.tsx","index.tsx"],"names":["GridHelper","margin","savedVisibility","localStorage","getItem","useContext","GridSystemContext","breakpoints","gridHelperColumnColor","currentBreakpoint","useBreakpoint","useState","visible","setVisible","columnStyle","backgroundColor","useEffect","toggleGrid","key","ctrlKey","isVisible","setItem","toString","window","addEventListener","removeEventListener","React","className","styles","Object","keys","map","breakpoint","index","style","display","Grid","Array","columns","fill","column","Column","size","GRID_SETTINGS","sm","gutterSize","maxWidth","md","minWidth","lg","prefixes","grid","gridColumn","createContext","GridSystem","settings","useGridHelper","children","gridSettings","document","createElement","mediaQuery","gridStyle","forEach","items","i","j","width","push","query","join","getBreakpointQuery","head","appendChild","createTextNode","createStyles","Provider","value","gridHelperMargins","gridContext","setBreakpoint","tm","handleResize","setTimeout","bp","find","innerWidth","resvolveBreakpoint","clearTimeout","classNames","defaultState","dataProps","offsetLeft","offsetRight","refColumn","useRef","state","setState","data","setData","current","parentSize","parentElement","closest","getAttribute","totalColumns","columnSize","getParentSizes","ref","length","Fragment","App","item","alt","src","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.68f16920.chunk.js","sourcesContent":["import React, {CSSProperties, FunctionComponent, useContext, useEffect, useState} from 'react'\nimport {Column, Grid, GridSystemContext, useBreakpoint} from '..';\n\nimport styles from './GridHelper.module.css';\n\n\ninterface GridHelperProps {\n    margin?: {\n        [index: string]: string;\n    }\n}\n\n\nexport const GridHelper: FunctionComponent<GridHelperProps> =\n    ({\n         margin\n     }): JSX.Element => {\n\n        const savedVisibility = (localStorage.getItem('grid-helper') === 'true');\n        const {breakpoints, gridHelperColumnColor} = useContext(GridSystemContext)\n        const currentBreakpoint = useBreakpoint()\n        const [visible, setVisible] = useState<boolean>(savedVisibility ? savedVisibility : false);\n\n        const columnStyle: CSSProperties = {\n            backgroundColor: 'rgba(0, 0, 0, .1)'\n        };\n\n        if (gridHelperColumnColor) {\n            columnStyle.backgroundColor = gridHelperColumnColor;\n        }\n\n        useEffect(() => {\n            const toggleGrid = ({key, ctrlKey}: KeyboardEvent): void => {\n                if (ctrlKey && key === 'g') {\n                    const isVisible = !visible;\n                    setVisible(isVisible);\n                    localStorage.setItem('grid-helper', isVisible.toString());\n                }\n            };\n\n            window.addEventListener('keyup', toggleGrid);\n\n            return (): void => window.removeEventListener('keyup', toggleGrid);\n        }, [visible]);\n\n        return (\n            <div className={`${styles.wrapper} ${visible ? styles.wrapper__visible : ''}`}>\n                {Object.keys(breakpoints).map((breakpoint, index) => (\n                    <div\n                        className={styles.container}\n                        style={{\n                            display: currentBreakpoint !== breakpoint ? 'none' : '',\n                            margin: margin && margin[breakpoint] ? `0 ${margin[breakpoint]}` : 'auto'\n                        }} key={`g-${breakpoint}-${index}`}>\n                        <Grid className={styles.container}>\n                            {\n                                [...Array(breakpoints[breakpoint].columns)].fill('c').map((column, index) =>\n                                    <Column key={`${breakpoint}-${column}-${index}`} className={styles.column}\n                                            size={{[breakpoint]: 1}}>\n                                        <div style={columnStyle} className={styles.columnFill}/>\n                                    </Column>)\n                            }\n                        </Grid>\n                    </div>\n                ))}\n            </div>\n        )\n    }\n","import {Breakpoint, GridSettings} from \"./Grid.interfaces\";\n\nexport const GRID_SETTINGS: GridSettings = {\n    breakpoints: {\n        sm: {\n            columns: 4,\n            gutterSize: 5,\n            maxWidth: 600,\n        },\n        md: {\n            columns: 8,\n            gutterSize: 5,\n            minWidth: 600,\n            maxWidth: 900,\n        },\n        lg: {\n            columns: 12,\n            gutterSize: 10,\n            minWidth: 900,\n        }\n    },\n    prefixes: {\n        grid: 'g',\n        gridColumn: 'gc',\n    }\n}\n\nconst getBreakpointQuery = (\n    {minWidth, maxWidth}: Breakpoint,\n    styles: string\n) => {\n    const query = [];\n\n    if (minWidth) {\n        query.push(`(min-width: ${minWidth}px)`);\n    }\n    if (maxWidth) {\n        query.push(`(max-width: ${maxWidth}px)`);\n    }\n\n    return `@media ${query.join(' and ')} {${styles}}`\n};\n\nexport const createStyles = (gridSettings: GridSettings) => {\n    const style = document.createElement('style');\n    const mediaQuery: string[] = [];\n    const {breakpoints, prefixes} = gridSettings;\n\n    const gridStyle = `.${prefixes.grid} {\n        display: flex;\n        flex-basis: auto;\n        flex-direction: row;\n        flex-wrap: wrap;\n        width: auto;\n    }`;\n\n    Object.keys(breakpoints).forEach((breakpoint) => {\n        let items = '';\n        const {gutterSize} = breakpoints[breakpoint];\n\n        // CSS Grid\n        items += `.${prefixes.grid}-${breakpoint} {\n                margin-left: -${gutterSize}px;\n                margin-right: -${gutterSize}px;\n            }`;\n\n        // CSS column\n        items += `.${prefixes.gridColumn}-${breakpoint} {\n                box-sizing: border-box;\n                padding-left: ${gutterSize}px;\n                padding-right: ${gutterSize}px;\n            }`;\n\n        for (let i = 1; i <= breakpoints[breakpoint].columns; i++) {\n            for (let j = 1; j <= i; j++) {\n                const width = (j / i) * 100;\n\n                items += `.${prefixes.gridColumn}-${breakpoint}-${j}-${i} {\n                        flex-basis: ${width}%;\n                        width: ${width}%;\n                    }`;\n\n                // CSS offset left\n                items += `.${prefixes.gridColumn}-ol-${breakpoint}-${j}-${i} {\n                        margin-left: ${width}%;\n                    }`;\n\n                // CSS offset left\n                items += `.${prefixes.gridColumn}-or-${breakpoint}-${j}-${i} {\n                        margin-right: ${width}%;\n                    }`;\n            }\n        }\n\n        mediaQuery.push(getBreakpointQuery(breakpoints[breakpoint], items))\n    });\n\n    mediaQuery.push(gridStyle);\n\n    document.head.appendChild(style);\n    style.appendChild(document.createTextNode(mediaQuery.join('')));\n};\n","import React, {createContext, FunctionComponent, useEffect} from 'react'\nimport {GridSettings, GridSystemProps} from './Grid.interfaces'\nimport {GridHelper} from \"../GridHelper\";\nimport {createStyles, GRID_SETTINGS} from \"./Grid.constants\";\n\n\nexport const GridSystemContext = createContext<GridSettings>(GRID_SETTINGS);\n\nexport const GridSystem: FunctionComponent<GridSystemProps> =\n    ({\n         settings = GRID_SETTINGS,\n         useGridHelper = false,\n         children\n     }) => {\n        useEffect(() => createStyles(settings), [settings]);\n\n        return (\n            <GridSystemContext.Provider value={settings}>\n                {children}\n                {useGridHelper && <GridHelper margin={settings?.gridHelperMargins}/>}\n            </GridSystemContext.Provider>\n        );\n    }\n","import {useContext, useEffect, useState} from \"react\";\nimport {GridSystemContext} from \"./GridSystem\";\n\nexport const useBreakpoint = () => {\n    const gridContext = useContext(GridSystemContext);\n    const [breakpoint, setBreakpoint] = useState<string>(\n        Object.keys(gridContext.breakpoints)[0]\n    );\n\n    const resvolveBreakpoint = () => {\n        const bp = Object.keys(gridContext.breakpoints).find((key) => {\n            const {minWidth, maxWidth} = gridContext.breakpoints[key];\n            const {innerWidth} = window;\n\n            let breakpoint = null;\n\n            if (\n                minWidth &&\n                maxWidth &&\n                innerWidth >= minWidth &&\n                innerWidth <= maxWidth\n            ) {\n                breakpoint = key;\n            } else if (minWidth && !maxWidth && innerWidth >= minWidth) {\n                breakpoint = key;\n            } else if (!minWidth && maxWidth && innerWidth < maxWidth) {\n                breakpoint = key;\n            }\n\n            return breakpoint;\n        });\n\n        if (bp) {\n            setBreakpoint(bp);\n        }\n    }\n\n    useEffect(() => {\n        let tm: number;\n        const handleResize = () => {\n            tm = window.setTimeout(() => resvolveBreakpoint(), 10);\n        };\n\n        window.addEventListener(\"resize\", handleResize);\n\n        handleResize();\n\n        return () => {\n            window.clearTimeout(tm);\n            window.removeEventListener(\"resize\", handleResize);\n        }\n    }, [gridContext.breakpoints]);\n\n    return breakpoint;\n};\n","import React, { useContext } from 'react'\nimport { GridSystemContext } from './GridSystem'\n\ninterface GridContainerProps {\n  className?: string;\n  style?: {};\n}\n\nexport const Grid: React.FC<GridContainerProps> = ({\n  children,\n  className = '',\n  style\n}) => {\n  const { breakpoints, prefixes } = useContext(GridSystemContext)\n  const classNames = Object.keys(breakpoints)\n    .map((breakpoint) => `g-${breakpoint}`)\n    .join(' ')\n\n  return (\n    <div\n      style={style}\n      className={`${prefixes.grid} ${classNames} ${className}`}\n    >\n      {children}\n    </div>\n  )\n}\n","import React, {Fragment, FunctionComponent, useContext, useEffect, useRef, useState} from 'react';\nimport {GridSystemContext} from './GridSystem';\n\n\ninterface GridColumnProps {\n  className?: string;\n  size: {\n    [index: string]: number | undefined;\n  },\n  offsetLeft?: {\n    [index: string]: number | undefined;\n  },\n  offsetRight?: {\n    [index: string]: number | undefined;\n  }\n}\n\ninterface ColumnState {\n  classNames: string;\n  dataProps: { [index: string]: string | number; }\n}\n\nconst defaultState = {classNames: '', dataProps: {}};\n\nexport const Column: FunctionComponent<GridColumnProps> =\n  ({\n     children,\n     className = '',\n     size,\n     offsetLeft,\n     offsetRight\n   }) => {\n    const refColumn = useRef<HTMLDivElement>(null);\n    const {breakpoints, prefixes} = useContext(GridSystemContext);\n    const [state, setState] = useState<ColumnState>(defaultState);\n    const [data, setData] = useState({});\n\n    const getParentSizes = () => {\n      const classNames: string[] = [];\n      let dataProps: { [index: string]: string | number } = {};\n\n      Object.keys(breakpoints).forEach(breakpoint => {\n        const parentSize = refColumn?.current?.parentElement\n          ?.closest(`[data-column-size-${breakpoint}]`)\n          ?.getAttribute(`data-column-size-${breakpoint}`);\n\n        const totalColumns = parentSize ? parentSize : breakpoints[breakpoint].columns;\n        const columnSize = size[breakpoint] ? size[breakpoint] : totalColumns;\n\n        classNames.push(`${prefixes.gridColumn}-${breakpoint} ${prefixes.gridColumn}-${breakpoint}-${columnSize}-${totalColumns}`);\n\n        if (offsetLeft && offsetLeft[breakpoint]) {\n          classNames.push(`${prefixes.gridColumn}-ol-${breakpoint}-${offsetLeft[breakpoint]}-${totalColumns}`);\n        }\n\n        if (offsetRight && offsetRight[breakpoint]) {\n          classNames.push(`${prefixes.gridColumn}-or-${breakpoint}-${offsetRight[breakpoint]}-${totalColumns}`);\n        }\n\n        if (columnSize) {\n          dataProps[`data-column-size-${breakpoint}`] = columnSize;\n        }\n      });\n\n      setState({\n        classNames: classNames.join(' '),\n        dataProps,\n      });\n\n      setData(dataProps);\n    }\n\n    useEffect(() => {\n      if (refColumn.current && size) {\n        getParentSizes();\n      }\n    }, [size, offsetLeft, offsetRight, refColumn, breakpoints]);\n\n    return <div\n      ref={refColumn}\n      {...data}\n      className={`${state.classNames} ${className}`}>\n      {Object.keys(state.dataProps).length > 0 ? children : <Fragment />}\n    </div>;\n  };\n","import React from 'react'\nimport 'light-react-grid/dist/index.css'\nimport {Column, Grid, useBreakpoint} from \"light-react-grid\";\n\nconst App = () => {\n    const breakpoint = useBreakpoint();\n\n    return <div className=\"container\">\n        <h1>Grid usage examples</h1>\n        <p>Use CTRL + G to toggle Grid helper</p>\n        <section className=\"section\">\n            <Grid>\n                <Column size={{sm: 4, md: 3, lg: 2}}>\n                    <div className=\"colorized\">Small 4 columns, Medium 3 columns, large: two columns</div>\n                </Column>\n                <Column size={{sm: 2}}>\n                    <p className=\"colorized\">\n                        {breakpoint === 'sm' && 'Small 2 columns.'}\n                        {breakpoint !== 'sm' && 'Medium & large aren\\'t defined, so it will use 100%.'}\n                    </p>\n                </Column>\n            </Grid>\n        </section>\n        <section className=\"section\">\n            <h2>Multiple items</h2>\n            <Grid>\n                {[...Array(17)].fill('m-items').map((item, index) =>\n                    <Column key={`${item}-${index}`} size={{sm: 2, md: 3, lg: 3}}>\n                        <div className=\"colorized multiple-items__item\">Column</div>\n                    </Column>)\n                }\n                {breakpoint === 'sm' && <Column size={{sm: 4}}><p className=\"colorized\">I'm only showing on small breakpoint</p></Column>}\n            </Grid>\n        </section>\n        <section className=\"section\">\n            <h2>Images example</h2>\n            <Grid>\n                <Column size={{sm: 4, md: 4, lg: 3}}>\n                    <div className=\"image-wrapper\">\n                        <img\n                            alt=\"Dražen Petrović\"\n                            className=\"image\"\n                            src=\"https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/f/2c4bcaa5-0d9b-4342-b287-6d2d50ab5884/d6yjqcy-de41569e-ba58-4ab6-98ef-11be0176f5d9.jpg/v1/fill/w_600,h_800,q_75,strp/drazen_petrovic_by_sutija_d6yjqcy-fullview.jpg?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1cm46YXBwOiIsImlzcyI6InVybjphcHA6Iiwib2JqIjpbW3sicGF0aCI6IlwvZlwvMmM0YmNhYTUtMGQ5Yi00MzQyLWIyODctNmQyZDUwYWI1ODg0XC9kNnlqcWN5LWRlNDE1NjllLWJhNTgtNGFiNi05OGVmLTExYmUwMTc2ZjVkOS5qcGciLCJoZWlnaHQiOiI8PTgwMCIsIndpZHRoIjoiPD02MDAifV1dLCJhdWQiOlsidXJuOnNlcnZpY2U6aW1hZ2Uud2F0ZXJtYXJrIl0sIndtayI6eyJwYXRoIjoiXC93bVwvMmM0YmNhYTUtMGQ5Yi00MzQyLWIyODctNmQyZDUwYWI1ODg0XC9zdXRpamEtNC5wbmciLCJvcGFjaXR5Ijo5NSwicHJvcG9ydGlvbnMiOjAuNDUsImdyYXZpdHkiOiJjZW50ZXIifX0.3v6BAP1tXo4BsIVTli-OUFDzODz2HJIX67rVtecxIjE\"\n                        />\n                        <cite className=\"cite\">Dražen Petrović (Author: Marko Šutija)</cite>\n                    </div>\n                </Column>\n                <Column size={{sm: 4, md: 4, lg: 6}}>\n                    <div className=\"image-wrapper\">\n                        <img\n                            alt=\"Dražen Petrović\"\n                            className=\"image\"\n                            src=\"https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/f/2c4bcaa5-0d9b-4342-b287-6d2d50ab5884/d6xi2js-50357cf7-cf3d-4de7-9657-18d3c17ff443.jpg/v1/fill/w_800,h_583,q_75,strp/western_by_sutija_d6xi2js-fullview.jpg?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1cm46YXBwOiIsImlzcyI6InVybjphcHA6Iiwib2JqIjpbW3sicGF0aCI6IlwvZlwvMmM0YmNhYTUtMGQ5Yi00MzQyLWIyODctNmQyZDUwYWI1ODg0XC9kNnhpMmpzLTUwMzU3Y2Y3LWNmM2QtNGRlNy05NjU3LTE4ZDNjMTdmZjQ0My5qcGciLCJoZWlnaHQiOiI8PTU4MyIsIndpZHRoIjoiPD04MDAifV1dLCJhdWQiOlsidXJuOnNlcnZpY2U6aW1hZ2Uud2F0ZXJtYXJrIl0sIndtayI6eyJwYXRoIjoiXC93bVwvMmM0YmNhYTUtMGQ5Yi00MzQyLWIyODctNmQyZDUwYWI1ODg0XC9zdXRpamEtNC5wbmciLCJvcGFjaXR5Ijo5NSwicHJvcG9ydGlvbnMiOjAuNDUsImdyYXZpdHkiOiJjZW50ZXIifX0.wCZ--sTcp9KHS0p8nIH_5PcVxivu60eEews6_9DZabo\"\n                        />\n                        <cite className=\"cite\">Rider (Author: Marko Šutija)</cite>\n                    </div>\n                </Column>\n            </Grid>\n        </section>\n        <section className=\"section\">\n            <h2>Nested grids</h2>\n            <Grid>\n                <Column size={{sm: 4, md: 6, lg: 6}}>\n                    <p>Grid inside column</p>\n                    <Grid>\n                        <Column size={{sm: 2, md: 3, lg: 3}}>\n                            <div className=\"image-wrapper\">\n                                <img\n                                    alt=\"Dražen Petrović\"\n                                    className=\"image\"\n                                    src=\"https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/f/2c4bcaa5-0d9b-4342-b287-6d2d50ab5884/d6yjqcy-de41569e-ba58-4ab6-98ef-11be0176f5d9.jpg/v1/fill/w_600,h_800,q_75,strp/drazen_petrovic_by_sutija_d6yjqcy-fullview.jpg?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1cm46YXBwOiIsImlzcyI6InVybjphcHA6Iiwib2JqIjpbW3sicGF0aCI6IlwvZlwvMmM0YmNhYTUtMGQ5Yi00MzQyLWIyODctNmQyZDUwYWI1ODg0XC9kNnlqcWN5LWRlNDE1NjllLWJhNTgtNGFiNi05OGVmLTExYmUwMTc2ZjVkOS5qcGciLCJoZWlnaHQiOiI8PTgwMCIsIndpZHRoIjoiPD02MDAifV1dLCJhdWQiOlsidXJuOnNlcnZpY2U6aW1hZ2Uud2F0ZXJtYXJrIl0sIndtayI6eyJwYXRoIjoiXC93bVwvMmM0YmNhYTUtMGQ5Yi00MzQyLWIyODctNmQyZDUwYWI1ODg0XC9zdXRpamEtNC5wbmciLCJvcGFjaXR5Ijo5NSwicHJvcG9ydGlvbnMiOjAuNDUsImdyYXZpdHkiOiJjZW50ZXIifX0.3v6BAP1tXo4BsIVTli-OUFDzODz2HJIX67rVtecxIjE\"\n                                />\n                                <cite className=\"cite\">Dražen Petrović (Author: Marko Šutija)</cite>\n                            </div>\n                        </Column>\n                        <Column size={{sm: 2, md: 3, lg: 3}}>\n                            <div className=\"image-wrapper\">\n                                <img\n                                    alt=\"Dražen Petrović\"\n                                    className=\"image\"\n                                    src=\"https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/f/2c4bcaa5-0d9b-4342-b287-6d2d50ab5884/d6xi2js-50357cf7-cf3d-4de7-9657-18d3c17ff443.jpg/v1/fill/w_800,h_583,q_75,strp/western_by_sutija_d6xi2js-fullview.jpg?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1cm46YXBwOiIsImlzcyI6InVybjphcHA6Iiwib2JqIjpbW3sicGF0aCI6IlwvZlwvMmM0YmNhYTUtMGQ5Yi00MzQyLWIyODctNmQyZDUwYWI1ODg0XC9kNnhpMmpzLTUwMzU3Y2Y3LWNmM2QtNGRlNy05NjU3LTE4ZDNjMTdmZjQ0My5qcGciLCJoZWlnaHQiOiI8PTU4MyIsIndpZHRoIjoiPD04MDAifV1dLCJhdWQiOlsidXJuOnNlcnZpY2U6aW1hZ2Uud2F0ZXJtYXJrIl0sIndtayI6eyJwYXRoIjoiXC93bVwvMmM0YmNhYTUtMGQ5Yi00MzQyLWIyODctNmQyZDUwYWI1ODg0XC9zdXRpamEtNC5wbmciLCJvcGFjaXR5Ijo5NSwicHJvcG9ydGlvbnMiOjAuNDUsImdyYXZpdHkiOiJjZW50ZXIifX0.wCZ--sTcp9KHS0p8nIH_5PcVxivu60eEews6_9DZabo\"\n                                />\n                                <cite className=\"cite\">Rider (Author: Marko Šutija)</cite>\n                            </div>\n                        </Column>\n                    </Grid>\n                </Column>\n                {breakpoint !== 'sm' && <Column size={{md: 2, lg: 6}}>\n                    <div className=\"centered\">\n                        Hello from the right side.\n                    </div>\n                </Column>}\n            </Grid>\n        </section>\n    </div>;\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nimport {GRID_SETTINGS, GridSystem} from 'light-react-grid';\n\nReactDOM.render(\n    <GridSystem useGridHelper={true} settings={{\n        ...GRID_SETTINGS,\n        gridHelperColumnColor: 'rgba(0, 0, 0, .05)',\n        gridHelperMargins: {\n            sm: '5%',\n            md: '5%',\n            lg: '5%'\n        },\n    }}>\n        <App/>\n    </GridSystem>, document.getElementById('root'));\n"],"sourceRoot":""}